---
title: "Social Networks (Demography 180)"
editor: source
pagetitle: "Social Networks (Demog 180)"
bibliography: class_networks_2024.bib
csl: chicago-syllabus.csl
#suppress-bibliography: True
output:
  html_document: 
    css: syllabus.css
    pandoc_args: [
                  #"-F", "pandoc-include",
                  #"--citeproc",
                  #"-F", "pandoc-crossref", 
                  #"-F", "pandoc-citeproc"
                  ]
  pdf_document: default
---

<!--
NOTES:
- the chicago-syllabus.csl is from Kieran Healy: https://github.com/kjhealy/pandoc-templates/blob/master/csl/chicago-syllabus.csl
- if changing this in the future, you may have to tweak the 'range' values in the part that loads the excel sheet

WISHLIST:
- be able to generate pdf version (right now, the table looks wonky - links don't render, NAs, etc)
-->

{{< include 2024_links.qmd >}}

```{r helper, echo=FALSE, warning=FALSE, error=FALSE, message=FALSE}
# see
# https://github.com/tidyverse/googlesheets4/issues/274
range_read_cells_format <- function(
    ss, sheet = NULL, range = NULL, skip = 0, n_max = Inf,
    discard_empty = TRUE, group = c('background', 'text', 'other')) {

  group = match.arg(group)
  oot <- range_read_cells(ss, sheet, range, skip, n_max, 'full', discard_empty)

  if (group == 'background') {
    # for some colors, one or more components may be missing from the list
    out <- list()
    for (p in c('red', 'green', 'blue')) {
      y <- map(
        oot$cell, ~ .x$effectiveFormat$backgroundColorStyle$rgbColor[[p]])
      out[[p]] <- map_dbl(y, ~ if (is.null(.x)) 0 else .x) # RStudio no like
    }
    out <- tibble::as_tibble(out)

  } else if (group == 'text') {
    cols <- c(
      'fontFamily', 'fontSize', 'bold', 'italic', 'strikethrough', 'underline')
    out1 <- map_dfr(oot$cell, ~ .x$effectiveFormat$textFormat[cols])

    out2 <- list()
    for (p in c('red', 'green', 'blue')) {
      y <- map(
        oot$cell,
        ~ .x$effectiveFormat$textFormat$foregroundColorStyle$rgbColor[[p]])
      out2[[p]] <- map_dbl(y, ~ if (is.null(.x)) 0 else .x) # RStudio no like
    }
    out2 <- tibble::as_tibble(out2)
    out <- cbind(out1, out2)

  } else {
    out1 <- map_dfr(oot$cell, ~ .x$effectiveFormat$padding)
    # colnames(out1) = paste0('padding_', colnames(out1))

    cols = c('horizontalAlignment', 'verticalAlignment',
             'wrapStrategy', 'hyperlinkDisplayType')
    out2 <- map_dfr(oot$cell, ~ .x$effectiveFormat[cols])
    out <- cbind(out1, out2)

  }

  out <- oot %>%
    dplyr::select(!cell) %>%
    cbind(out)
  out
}

#d1 <- range_read_cells_format(ss, sheet, range, group = 'background')
#d2 <- range_read_cells_format(ss, sheet, range, group = 'text')
#d3 <- range_read_cells_format(ss, sheet, range, group = 'other')
```

```{r download-schedule, echo=FALSE, warning=FALSE, error=FALSE, message=FALSE}

library(googlesheets4)
library(googledrive)
library(readxl)
library(writexl)
library(tibble)
library(knitr)
library(kableExtra)
library(dplyr)
# my helper package
library(syllabusr)
library(lubridate)
library(purrr)
library(stringr)
library(glue)

#library(tidyxl)

library(gt)

googlesheets4::gs4_deauth()
googledrive::drive_deauth()

class_fn <- "demog180 - 2024"
# this file is set so that anyone can read it (but not edit it).
# this means we can avoid annoying authentication requirements
#class_url <- "https://docs.google.com/spreadsheets/d/14DsJVPw3BXiia1KzBNDR4_PHzfvJMILiNFfEbVCPd4s"
#class_url <- "https://docs.google.com/spreadsheets/d/1tN5y8aAkGpWRguF5rnGeEKbDPQQta1SlrdHS30yxFXI"
#class_url <- "https://docs.google.com/spreadsheets/d/1uO3F-KZqm_okTbjkntecx6bGhszb-muvNdusRKPdCKo/edit#gid=0"
class_url <- "https://docs.google.com/spreadsheets/d/1lGJc7WlWR0aEjI3QGEtUKJcpFJcadkM5OPamQHHaD4M/edit?gid=1108852408#gid=1108852408"

#content_range <- "C2:I32"
content_range_row_offset <- 2
content_range_col_offset <- 3 
content_range_height <- 31
content_range_width <- 7
content_range <- toupper(paste0(letters[content_range_col_offset], 
                                content_range_row_offset, 
                                ":", 
                                letters[content_range_col_offset+content_range_width-1], 
                                content_range_row_offset + content_range_height - 1))

sheet <- drive_get(class_url) %>%
  read_sheet(sheet='overview', 
             range=content_range)

# read the cell colors
cell_col <- drive_get(class_url) %>% range_read_cells_format(sheet='overview', 
                                                             range=content_range, 
                                                             group = 'background')

# we'll blank out any cells whose background color is not white
# (this allows us to easily stage stuff in the google sheet, and then
#  publish it by changing the background color + recompiling)
cell_to_blank <- cell_col %>% filter(red < 1 | blue < 1 | green < 1)

# write a local, xlsx version of the syllabus
write_xlsx(list(overview=sheet),
           path=paste0(class_fn, '.xlsx'))

# and read that local version in, so that we're working with a read_excel object
tab <- read_excel(paste0(class_fn, '.xlsx'), 
                  sheet='overview')

# now turn cells that have background that is some color other than white into blank 
# (they are not to be published yet)
if(nrow(cell_to_blank) > 0) {
  for(i in 1:nrow(cell_to_blank)) {
    cur_row <- cell_to_blank[i,]
    #tab[cur_row$row - content_range_row_offset, cur_row$col - content_range_col_offset + 1] <- "XXX"
    tab[cur_row$row - content_range_row_offset, cur_row$col - content_range_col_offset + 1] <- NA
  }
}

## deduce all of the states based on the starting date
## THIS ASSUMES THAT
##   - there is a column called 'Date'
##   - the first entry in that column is the date to base the rest of the schedule off of
base_date <- as.Date(tab$Date[1])

next_class <- syllabusr::make_next_class_date(base_date, 'TuTh')
class_date <- syllabusr::make_class_date(base_date, 'TuTh')
```

(Syllabus last updated: `r format(Sys.Date(), "%Y-%B-%d")`)

## Quick links

**Class meetings**: Tuesdays and Thursdays, 12:30-2:00PM, 166 Social Science Building   
<BR>
**Web**: <https://www.dennisfeehan.org/demog180-fa2024>  
**Ed page**: <https://edstem.org/us/courses/62283/discussion/>   
**Gradescope page**: <https://www.gradescope.com/courses/823074>   
**Bcourses page**: <https://bcourses.berkeley.edu/courses/1537401>  
**Lecture slides**: <https://drive.google.com/drive/u/0/folders/1Hd7PD84a60r11dcRhMQx4axd0A-vdrRN>  
<BR>
**Final exam**: TBA 
<BR>

## Staff
   
**Professor Dennis Feehan**, feehan [at] berkeley.edu  
Office hours: (see Ed post)  
  
**GSIs**, TBA
   
## Overview

The science of social networks focuses on measuring, modeling, and understanding the different ways that people are connected to one another.  In this class, we will use a broad toolkit of theories and methods drawn from the social, natural, and mathematical sciences to learn what a social network is, to understand how to work with social network data, and to illustrate some of the ways that social networks can be useful in theory and in practice. We will see that network ideas are powerful enough to be used everywhere from CDC and UNAIDS, where network models help epidemiologists prevent the spread of HIV, to Silicon Valley, where data scientists use network ideas to build products that enable people all across the globe to connect with one another.


**Please re-check the syllabus frequently; it will be updated as the semester progresses**

```{r show-schedule, echo=FALSE, warning=FALSE, error=FALSE, message=FALSE}
tabshow <- tab %>%
  mutate(Date = map_chr(row_number(), ~ class_date(.x)),
         # ugly, but working. the contortions are needed to convert the readable class date into
         # a Date object
         Week = map_dbl(Date, ~ syllabusr::week_num( mdy(paste(str_replace(.x, ".*,", ""), year(base_date))))))

options(knitr.kable.NA = '')

#tabshow %>%
#  kable() %>%
#  kable_styling(bootstrap_options = c('striped'))

# Trying to get what are called 'reference-style links' to work
# in markdown column
# https://www.markdownguide.org/basic-syntax/

tabshow %>%
  gt() %>%
  sub_missing(missing_text='') %>%
  fmt_markdown(columns='Theme') %>%
  fmt_markdown(columns='Week') %>%
  fmt_markdown(columns='Demo') %>%
  fmt_markdown(columns='Lab') %>%
  fmt_markdown(columns='Hwk') %>%
  cols_width( Theme ~ pct(10),
              Week ~ pct(5),
              Date ~ pct(5),
              Topic ~ pct(40),
              Demo ~ px(20),
              Lab ~ px(10),
              Hwk ~ px(10))
  #cols_width( Theme ~ px(50),
  #            Week ~ px(50),
  #            Date ~ px(100),
  #            Topic ~ px(500),
  #            Lecture ~ px(200),
  #            Lab ~ px(200),
  #            Hwk ~ px(200))
```

## Requirements

### Lectures

Lectures will introduce and develop key theoretical and technical concepts in the study of social networks.  To illustrate these ideas, some of the lectures will have a live lab component, where  we will interactively discuss and work through an analysis in a Jupyter notebook. These live labs will help us explore and develop intuition about key concepts in the course.

The lectures are organized so that the first set of material, up to the mid-term exam, is a survey of the core theories, concepts, and methods needed to be familiar with social networks.  After the mid-term, the lectures will turn to an exploration of how these core ideas have been used, modified, and deepened in several different topic areas.

*You are responsible for all of the material covered in lectures, as well as any announcements made there.*

### Required readings

The course readings will include selections from the textbook 
[Networks, Crowds, and Markets](https://www.cs.cornell.edu/home/kleinber/networks-book/) by Easley and Kleinberg: 

* @easley_networks_2010

We will also read chapters from popular science books written by leading network researchers, including selections from

* @watts_six_2003
* @epstein_invisible_2008

Finally, we will read several journal and newspaper articles.

The readings serve two purposes: (1) they provide an introduction and reference for key concepts that we will need to study social networks; (2) they illustrate how social network ideas get used in real world research and applications across many different disciplines. You are expected to do the reading before each class. Whenever possible,  PDFs of the readings will be posted on the bCourses site.


### Homeworks and labs

There will be a total of 6 to 8 homework assignments and a similar number of labs. The homeworks and labs are a critical part of the learning you will do in this class: they give you an opportunity to explore the topics we cover in the readings and in lecture on your own. They also give you a chance to practice your writing and your data analysis and programming skills.  Most homeworks and labs will ask you to provide some written arguments and to solve some problems by writing Python code in a Jupyter notebook.  It can be helpful and educational to discuss the assignments with other students in the class, but (1) all of the work should be your own (i.e., you are not allowed to just copy code, answers, or arguments); (2) you should make a note of the names of the other students you worked with when handing your assignments in.

Labs are graded based on effort; therefore, you can get full credit on a lab even if you do not get all of the answers right. Labs must be handed in on time for full credit. 

Homeworks are graded on correctness and must be handed in on time for full credit. However, we will drop the homework with the lowest score; thus, you can miss handing in one homework over the course of the semester without it affecting your grade.

### Exams

There will be two in-class closed book examinations. The mid-term examination will be held during normal class time in our normal classroom; the timing of this midterm will be designed to assess your mastery of the core concepts in social networks. The final will be held during the final exam period (see the date/time above). The final exam will be cumulative.

### Quizzes

We will post a small number (2-4) quizzes on bCourses over the semester. These quizzes will consist of 5-10 multiple choice questions; the goal of these quizzes will be to ensure that you are staying up to date with the reading and lecture materials covered in the class (including guest lectures).

<!--### Sections                                                                                                                                                                                                                       -->

<!--There will be optional weekly sections. The goal of these sections will be (1) to give you a chance to discuss the material and (2) to give you a chance to practice problems similar to the problems that will be on the homework.-->


### Summary

|  Component | % of grade |
|  ------ | ------ |
|  Homeworks (you can drop your lowest score) | 30 |
|  Labs  | 20 |
|  Mid-term exam | 20 |
|  Final exam | 25 |
|  Quizzes | 5 |

## Detailed modules

<div class="singlespace">

### Introduction to social networks {#sec:intro}
	
Intro to social networks; course overview

Lectures:

* Intro / what social networks are / class info
* Basic graph theory: definitions, types of networks; working with complete network data; degree distributions, average path length, clustering

<!--
* Lecture demo [Lecture demo: Working with complete network data ][whole network demo]

Other resources:

* Lab 2 [Lab 2: Working with complete network data][lab2]
* Hwk 3 [Hwk 3: Calculating average clustering in complete networks][hwk3]
-->
Other resources:

* [Lab 0: some Python basics][lab0]
* Lab 1: some Python basics
* Hwk 2: the clustering coefficient

Reading: 

* @watts_six_2003 preface-Ch.1
* @easley_networks_2010 Ch.1-Ch.2


<!--
#### Homework 1 {#sec:hwk1}

* [Assignment](https://tinyurl.com/demog180-fa22-hwk01)
-->


### Personal networks {#sec:personal}

Lectures:

* Personal networks; social connectedness and social isolation in America; survey data collection
* Sampling variation and the bootstrap; null models and a permutation test
* Patterns of homophily in Berkeley students' personal networks

Other resources:

* Hwk 1: Collecting personal network data

<!--
* [Lecture demo: Personal networks of Berkeley students][personal networks demo]

Other resources:

* Lab: Analyzing personal networks [part 1][lab1_1] [part 2][lab1_2]
* Hwk 2  [Homework 2: Analyzing personal networks][hwk2]
-->

<!--
Reading: 

TODO - would be good to have a reading for this...

-->


### Triadic closure / strength of weak ties / social capital {#sec:closure-sowt}

Lectures:

* Triadic close; strength of weak ties 
* Social capital; structural holes

Other resources:
<!--
* Lecture demo: [Strength of weak ties in the wiki talk network][sowt demo]
-->

Reading:

* @easley_networks_2010 Ch. 3.1-3.3 (Tie strength)
* @easley_networks_2010 Ch. 3.5 (Social capital)

### Homophily and balance theory {#sec:homophily-balance}

Lectures:

* Networks in context; homophily: choice and structure; social implications
* Positive and negative relationships

Other resources:
* Lab - Using a null model to analyze empirical data; homophily example

<!--
* [Lecture demo: Structural balance in the small slashdot network][structural balance demo]
-->

Reading:

* @easley_networks_2010 Ch.5.1-5.2 (Positive and negative relationships)

<!--
* Lab [Using the assortativity coefficient to quantify homophily][lab3]
-->



### Network models: the ER model {#sec:models}

Lectures:

* Intro to mathematical network models; the Erdos-Renyi model and its predictions

<!--
* Lecture demo [Lecture demo: Erdos-Renyi random networks notebook][er demo]
-->

Readings:

* @watts_six_2003 Ch. 2


### Affiliation networks {#sec:affiliation}

Lectures:

* Affiliation networks; foci; group membership; one-mode projections of bipartite networks

<!--
* [Lecture demo: Two mode network demo][Two mode network demo]
-->

Readings:

* @easley_networks_2010 Ch.4.3-4.4 (Affiliation networks)
w

### Small worlds {#sec:smallworlds}

Lectures:

* The small world phenomenon

Readings:

* @watts_six_2003 Ch. 3-4
* @easley_networks_2010 Ch. 20.1-20.2 (Small worlds)


### Search in small worlds and scale-free networks {#sec:scalefree}

Lectures:

* Search in small world
* Scale-free networks

<!--
* [Netlogo demo of Barabasi-Albert model][netlogo ba model]
-->

Readings:

* @watts_six_2003 Ch. 4-5
* @easley_networks_2010 Ch. 20.3-20.5 (Search in small worlds)
* @easley_networks_2010 Ch. 18.1-18.5 (Scale-free networks)


### Empirical studies of network structure {#sec:networkstructure}

We will discuss results from several recent research papers relevant to
network structure.


### Catch-up, review, and midterm {#sec:midterm}

Lectures:

* Catch-up and midterm review

### Simple contagion {#sec:simplecontagion}

Lectures:

* SIR model, types of centrality
* @easley_networks_2010 Ch. 21.1-21.3 (The SIR epidemic model)
* Why your friends have more friends than you do; network structure and disease; measuring contact networks

Reading:

* @watts_six_2003 Ch.6
* Notebook: Centrality and the SIR model on ER random networks



#### Homework 4 {#sec:hwk4}

* Homework 4 - SIR models and centrality (to be posted)

### Concurrency in sexual networks {#sec:concurrency}

* Sexual networks, concurrency, and HIV
* @epstein_invisible_2008 Ch.2-4
* OPTIONAL: @easley_networks_2010 Ch. 21.6
* NOTE: if you are interested in reading more of the debate over concurrency, [this issue](https://link.springer.com/journal/10461/14/1/page/1) of the journal that Lurie and Rosenthal published in has papers on both sides. (These additional papers are not required reading.)

<!--

### Cooperation {#sec:cooperation}

Lectures:

* Cooperation 
* Guest lecture: Ugur Yildirim 

Reading:

* @easley_networks_2010 Ch. 6.1-6.2 
* @axelrod_evolution_1984 Ch. 1 (on bCourses)

-->


### Social influence {#sec:socialinfluence}

Lectures:

* Social influence
* Threshold models

Reading:

* @easley_networks_2010 Ch. 16.1-16.2; parts of 16.3-16.6; 16.7
* @watts_six_2003 Ch. 7


### Complex contagion {#sec:complexcontagion}

Lectures:

* Complex contagion; decisions, threshold models
* Experimental studies of complex contagion
* Is obesity contagious? Observational studies of network contagion

Reading:

* @watts_six_2003 Ch. 8
* @easley_networks_2010 Ch. 19.1-19.6


<!--
#### Homework 5 {#sec:hwk5}

* Homework 5 - Small worlds (to be posted)

-->

### The friendship paradox {#sec:friendshipparadox}

#### Homework 6 and Quiz 3 {#sec:hwk6}

Reading:

* [Friends you can count on](https://opinionator.blogs.nytimes.com/2012/09/17/friends-you-can-count-on/)
* [Why your friends have more friends than you do](https://www.journals.uchicago.edu/doi/abs/10.1086/229693)


### Empirical studies of contagion {#sec:empiricalcontagion}

Reading:

* [Study says obesity can be contagious](https://www.nytimes.com/2007/07/25/health/25cnd-fat.html)



<!--
### Week 15: Guest lectures {#sec:guests}

Reading:

* TBA

-->

## Other class policies  
  
**Religious Accommodations**  
  
Requests to accommodate a student's religious creed by scheduling tests or
examinations at alternative times should be submitted directly to the
instructor. Reasonable common sense, judgment and the pursuit of mutual
goodwill should result in the positive resolution of scheduling conflicts. The
regular campus appeals process applies if a mutually satisfactory arrangement
cannot be achieved.

**Statement on Academic Freedom**  
  
Both students and instructors have rights to academic freedom. Please respect
the rights of others to express their points of view in the classroom.
  
**DSP Accommodations**  
  
The purpose of academic accommodations is to ensure that all students have a fair chance at academic success. Disability, or hardships such as basic needs insecurity, uncertain documentation and immigration status, medical and mental health concerns, pregnancy and parenting, significant familial distress, and experiencing sexual violence or harassment, can affect a student’s ability to satisfy particular course requirements. Students have the right to reasonable academic accommodations, without having to disclose personal information to instructors. For more information about accommodations, scheduling conflicts related to religious creed or extracurricular activities, please see the [Academic Accommodations hub website](https://evcp.berkeley.edu/programs-resources/academic-accommodations-hub#accommodations).
  
**Student Resources**  
  
The Student Learning Center provides a wide range of resources to promote learning and academic success for students. For information regarding these services, please consult the Student Learning Center Website:
https://slc.berkeley.edu/

**Classroom Climate**  
  
We are all responsible for creating a learning environment that is welcoming, inclusive, equitable, and respectful. If you feel that these expectations are not being met, you can consult your instructor(s) or seek assistance from campus resources (see the [Academic Accommodations website](https://evcp.berkeley.edu/programs-resources/academic-accommodations-hub#accommodations)).
  
**Academic Integrity**  
  
The high academic standard at the University of California, Berkeley, is reflected in each degree that is awarded. As a result, every student is expected to maintain this high standard by ensuring that all academic work reflects unique ideas or properly attributes the ideas to the original sources.

These are some basic expectations of students with regards to academic integrity:

* Any work submitted should be your own individual thoughts, and should not have been submitted for credit in another course unless you have prior written permission to re-use it in this course from this instructor.
* All assignments must use "proper attribution," meaning that you have identified the original source and extent or words or ideas that you reproduce or use in your assignment. This includes drafts and homework assignments!
* If you are unclear about expectations, ask your instructor or GSI.
* Do not collaborate or work with other students on assignments or projects unless you have been given permission or instruction to do so.
